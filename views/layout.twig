{% import 'macro.twig' as macro %}
FROM php:{{ php.version }}-{{ php.variant }}
{%- if systemPackages is not empty or needAutomake == true %}

RUN echo 'APT::Install-Recommends "0";' >>/etc/apt/apt.conf.d/99-recommends && \
    echo 'APT::Install-Suggests "0";' >>/etc/apt/apt.conf.d/99-suggests

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update && \ 
    apt-get install -y automake \
                       build-essential \
                       {% for package in systemPackages %}{{ package }} \
                       {% endfor %}
                        libtool \
                        ca-certificates && \
    apt-get -y autoremove && \
    rm -rf /var/lib/apt/lists/*

{% endif %}


{% for macroName in macroList %}
    {{ attribute(macro, macroName) is defined ? 'Method exists' : 'Method does not exist' }}
{{ attribute(macro, macroName) }}
{% endfor %}

{%- if peclExtensions.installByPecl is not empty %}
RUN pecl install {% for extension in peclExtensions.installByPecl %}{{ extension.nameForInstall }} {% endfor %}
{% endif %}

{% if peclExtensions.configure is not empty %}
{% for extension in peclExtensions.configure %}
RUN docker-php-ext-configure {{ extension.name }} {{ extension.configureOptions }}
{% endfor %}
{% endif %}

{%- if peclExtensions.installByDocker is not empty %}
RUN docker-php-ext-install {% for extension in peclExtensions.installByDocker %}{{ extension.nameForInstall }} {% endfor %}
{% endif %}

{% if peclExtensions.enable is not empty %}
RUN docker-php-ext-enable {% for extension in peclExtensions.enable %}{{ extension.name }} {% endfor %}
{% endif %}

{% block end %}

WORKDIR /var/www/{{ project.name }}
{% endblock %}

COPY php.ini /usr/local/etc/php/conf.d
